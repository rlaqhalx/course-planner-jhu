import {
  require_extends
} from "./chunk-6KB7OQ57.js";
import {
  require_interopRequireDefault
} from "./chunk-RV3SY6RA.js";
import {
  base_exports,
  esm_exports as esm_exports2,
  init_base,
  init_esm as init_esm2
} from "./chunk-L53D4HCD.js";
import {
  esm_exports,
  init_esm
} from "./chunk-A5X2FJ4M.js";
import "./chunk-QV4XRCI3.js";
import "./chunk-VFCKLIQH.js";
import "./chunk-NHJI5CSF.js";
import "./chunk-M45RNPIH.js";
import {
  __commonJS,
  __toCommonJS
} from "./chunk-J43GMYXM.js";

// node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js
var require_objectWithoutPropertiesLoose = __commonJS({
  "node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js"(exports, module) {
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    module.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@mui/material/styles/createMixins.js
var require_createMixins = __commonJS({
  "node_modules/@mui/material/styles/createMixins.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = createMixins;
    var _extends2 = _interopRequireDefault(require_extends());
    function createMixins(breakpoints, mixins) {
      return (0, _extends2.default)({
        toolbar: {
          minHeight: 56,
          [breakpoints.up("xs")]: {
            "@media (orientation: landscape)": {
              minHeight: 48
            }
          },
          [breakpoints.up("sm")]: {
            minHeight: 64
          }
        }
      }, mixins);
    }
  }
});

// node_modules/@mui/material/colors/common.js
var require_common = __commonJS({
  "node_modules/@mui/material/colors/common.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var common = {
      black: "#000",
      white: "#fff"
    };
    var _default = common;
    exports.default = _default;
  }
});

// node_modules/@mui/material/colors/grey.js
var require_grey = __commonJS({
  "node_modules/@mui/material/colors/grey.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var grey = {
      50: "#fafafa",
      100: "#f5f5f5",
      200: "#eeeeee",
      300: "#e0e0e0",
      400: "#bdbdbd",
      500: "#9e9e9e",
      600: "#757575",
      700: "#616161",
      800: "#424242",
      900: "#212121",
      A100: "#f5f5f5",
      A200: "#eeeeee",
      A400: "#bdbdbd",
      A700: "#616161"
    };
    var _default = grey;
    exports.default = _default;
  }
});

// node_modules/@mui/material/colors/purple.js
var require_purple = __commonJS({
  "node_modules/@mui/material/colors/purple.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var purple = {
      50: "#f3e5f5",
      100: "#e1bee7",
      200: "#ce93d8",
      300: "#ba68c8",
      400: "#ab47bc",
      500: "#9c27b0",
      600: "#8e24aa",
      700: "#7b1fa2",
      800: "#6a1b9a",
      900: "#4a148c",
      A100: "#ea80fc",
      A200: "#e040fb",
      A400: "#d500f9",
      A700: "#aa00ff"
    };
    var _default = purple;
    exports.default = _default;
  }
});

// node_modules/@mui/material/colors/red.js
var require_red = __commonJS({
  "node_modules/@mui/material/colors/red.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var red = {
      50: "#ffebee",
      100: "#ffcdd2",
      200: "#ef9a9a",
      300: "#e57373",
      400: "#ef5350",
      500: "#f44336",
      600: "#e53935",
      700: "#d32f2f",
      800: "#c62828",
      900: "#b71c1c",
      A100: "#ff8a80",
      A200: "#ff5252",
      A400: "#ff1744",
      A700: "#d50000"
    };
    var _default = red;
    exports.default = _default;
  }
});

// node_modules/@mui/material/colors/orange.js
var require_orange = __commonJS({
  "node_modules/@mui/material/colors/orange.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var orange = {
      50: "#fff3e0",
      100: "#ffe0b2",
      200: "#ffcc80",
      300: "#ffb74d",
      400: "#ffa726",
      500: "#ff9800",
      600: "#fb8c00",
      700: "#f57c00",
      800: "#ef6c00",
      900: "#e65100",
      A100: "#ffd180",
      A200: "#ffab40",
      A400: "#ff9100",
      A700: "#ff6d00"
    };
    var _default = orange;
    exports.default = _default;
  }
});

// node_modules/@mui/material/colors/blue.js
var require_blue = __commonJS({
  "node_modules/@mui/material/colors/blue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var blue = {
      50: "#e3f2fd",
      100: "#bbdefb",
      200: "#90caf9",
      300: "#64b5f6",
      400: "#42a5f5",
      500: "#2196f3",
      600: "#1e88e5",
      700: "#1976d2",
      800: "#1565c0",
      900: "#0d47a1",
      A100: "#82b1ff",
      A200: "#448aff",
      A400: "#2979ff",
      A700: "#2962ff"
    };
    var _default = blue;
    exports.default = _default;
  }
});

// node_modules/@mui/material/colors/lightBlue.js
var require_lightBlue = __commonJS({
  "node_modules/@mui/material/colors/lightBlue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var lightBlue = {
      50: "#e1f5fe",
      100: "#b3e5fc",
      200: "#81d4fa",
      300: "#4fc3f7",
      400: "#29b6f6",
      500: "#03a9f4",
      600: "#039be5",
      700: "#0288d1",
      800: "#0277bd",
      900: "#01579b",
      A100: "#80d8ff",
      A200: "#40c4ff",
      A400: "#00b0ff",
      A700: "#0091ea"
    };
    var _default = lightBlue;
    exports.default = _default;
  }
});

// node_modules/@mui/material/colors/green.js
var require_green = __commonJS({
  "node_modules/@mui/material/colors/green.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var green = {
      50: "#e8f5e9",
      100: "#c8e6c9",
      200: "#a5d6a7",
      300: "#81c784",
      400: "#66bb6a",
      500: "#4caf50",
      600: "#43a047",
      700: "#388e3c",
      800: "#2e7d32",
      900: "#1b5e20",
      A100: "#b9f6ca",
      A200: "#69f0ae",
      A400: "#00e676",
      A700: "#00c853"
    };
    var _default = green;
    exports.default = _default;
  }
});

// node_modules/@mui/material/styles/createPalette.js
var require_createPalette = __commonJS({
  "node_modules/@mui/material/styles/createPalette.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.dark = void 0;
    exports.default = createPalette;
    exports.light = void 0;
    var _extends2 = _interopRequireDefault(require_extends());
    var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require_objectWithoutPropertiesLoose());
    var _utils = (init_esm(), __toCommonJS(esm_exports));
    var _system = (init_esm2(), __toCommonJS(esm_exports2));
    var _common = _interopRequireDefault(require_common());
    var _grey = _interopRequireDefault(require_grey());
    var _purple = _interopRequireDefault(require_purple());
    var _red = _interopRequireDefault(require_red());
    var _orange = _interopRequireDefault(require_orange());
    var _blue = _interopRequireDefault(require_blue());
    var _lightBlue = _interopRequireDefault(require_lightBlue());
    var _green = _interopRequireDefault(require_green());
    var _excluded = ["mode", "contrastThreshold", "tonalOffset"];
    var light = {
      text: {
        primary: "rgba(0, 0, 0, 0.87)",
        secondary: "rgba(0, 0, 0, 0.6)",
        disabled: "rgba(0, 0, 0, 0.38)"
      },
      divider: "rgba(0, 0, 0, 0.12)",
      background: {
        paper: _common.default.white,
        default: _common.default.white
      },
      action: {
        active: "rgba(0, 0, 0, 0.54)",
        hover: "rgba(0, 0, 0, 0.04)",
        hoverOpacity: 0.04,
        selected: "rgba(0, 0, 0, 0.08)",
        selectedOpacity: 0.08,
        disabled: "rgba(0, 0, 0, 0.26)",
        disabledBackground: "rgba(0, 0, 0, 0.12)",
        disabledOpacity: 0.38,
        focus: "rgba(0, 0, 0, 0.12)",
        focusOpacity: 0.12,
        activatedOpacity: 0.12
      }
    };
    exports.light = light;
    var dark = {
      text: {
        primary: _common.default.white,
        secondary: "rgba(255, 255, 255, 0.7)",
        disabled: "rgba(255, 255, 255, 0.5)",
        icon: "rgba(255, 255, 255, 0.5)"
      },
      divider: "rgba(255, 255, 255, 0.12)",
      background: {
        paper: "#121212",
        default: "#121212"
      },
      action: {
        active: _common.default.white,
        hover: "rgba(255, 255, 255, 0.08)",
        hoverOpacity: 0.08,
        selected: "rgba(255, 255, 255, 0.16)",
        selectedOpacity: 0.16,
        disabled: "rgba(255, 255, 255, 0.3)",
        disabledBackground: "rgba(255, 255, 255, 0.12)",
        disabledOpacity: 0.38,
        focus: "rgba(255, 255, 255, 0.12)",
        focusOpacity: 0.12,
        activatedOpacity: 0.24
      }
    };
    exports.dark = dark;
    function addLightOrDark(intent, direction, shade, tonalOffset) {
      const tonalOffsetLight = tonalOffset.light || tonalOffset;
      const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;
      if (!intent[direction]) {
        if (intent.hasOwnProperty(shade)) {
          intent[direction] = intent[shade];
        } else if (direction === "light") {
          intent.light = (0, _system.lighten)(intent.main, tonalOffsetLight);
        } else if (direction === "dark") {
          intent.dark = (0, _system.darken)(intent.main, tonalOffsetDark);
        }
      }
    }
    function getDefaultPrimary(mode = "light") {
      if (mode === "dark") {
        return {
          main: _blue.default[200],
          light: _blue.default[50],
          dark: _blue.default[400]
        };
      }
      return {
        main: _blue.default[700],
        light: _blue.default[400],
        dark: _blue.default[800]
      };
    }
    function getDefaultSecondary(mode = "light") {
      if (mode === "dark") {
        return {
          main: _purple.default[200],
          light: _purple.default[50],
          dark: _purple.default[400]
        };
      }
      return {
        main: _purple.default[500],
        light: _purple.default[300],
        dark: _purple.default[700]
      };
    }
    function getDefaultError(mode = "light") {
      if (mode === "dark") {
        return {
          main: _red.default[500],
          light: _red.default[300],
          dark: _red.default[700]
        };
      }
      return {
        main: _red.default[700],
        light: _red.default[400],
        dark: _red.default[800]
      };
    }
    function getDefaultInfo(mode = "light") {
      if (mode === "dark") {
        return {
          main: _lightBlue.default[400],
          light: _lightBlue.default[300],
          dark: _lightBlue.default[700]
        };
      }
      return {
        main: _lightBlue.default[700],
        light: _lightBlue.default[500],
        dark: _lightBlue.default[900]
      };
    }
    function getDefaultSuccess(mode = "light") {
      if (mode === "dark") {
        return {
          main: _green.default[400],
          light: _green.default[300],
          dark: _green.default[700]
        };
      }
      return {
        main: _green.default[800],
        light: _green.default[500],
        dark: _green.default[900]
      };
    }
    function getDefaultWarning(mode = "light") {
      if (mode === "dark") {
        return {
          main: _orange.default[400],
          light: _orange.default[300],
          dark: _orange.default[700]
        };
      }
      return {
        main: "#ed6c02",
        light: _orange.default[500],
        dark: _orange.default[900]
      };
    }
    function createPalette(palette) {
      const {
        mode = "light",
        contrastThreshold = 3,
        tonalOffset = 0.2
      } = palette, other = (0, _objectWithoutPropertiesLoose2.default)(palette, _excluded);
      const primary = palette.primary || getDefaultPrimary(mode);
      const secondary = palette.secondary || getDefaultSecondary(mode);
      const error = palette.error || getDefaultError(mode);
      const info = palette.info || getDefaultInfo(mode);
      const success = palette.success || getDefaultSuccess(mode);
      const warning = palette.warning || getDefaultWarning(mode);
      function getContrastText(background) {
        const contrastText = (0, _system.getContrastRatio)(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;
        if (true) {
          const contrast = (0, _system.getContrastRatio)(background, contrastText);
          if (contrast < 3) {
            console.error([`MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join("\n"));
          }
        }
        return contrastText;
      }
      const augmentColor = ({
        color,
        name,
        mainShade = 500,
        lightShade = 300,
        darkShade = 700
      }) => {
        color = (0, _extends2.default)({}, color);
        if (!color.main && color[mainShade]) {
          color.main = color[mainShade];
        }
        if (!color.hasOwnProperty("main")) {
          throw new Error(true ? `MUI: The color${name ? ` (${name})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${mainShade}\` property.` : (0, _utils.formatMuiErrorMessage)(11, name ? ` (${name})` : "", mainShade));
        }
        if (typeof color.main !== "string") {
          throw new Error(true ? `MUI: The color${name ? ` (${name})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(color.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : (0, _utils.formatMuiErrorMessage)(12, name ? ` (${name})` : "", JSON.stringify(color.main)));
        }
        addLightOrDark(color, "light", lightShade, tonalOffset);
        addLightOrDark(color, "dark", darkShade, tonalOffset);
        if (!color.contrastText) {
          color.contrastText = getContrastText(color.main);
        }
        return color;
      };
      const modes = {
        dark,
        light
      };
      if (true) {
        if (!modes[mode]) {
          console.error(`MUI: The palette mode \`${mode}\` is not supported.`);
        }
      }
      const paletteOutput = (0, _utils.deepmerge)((0, _extends2.default)({
        common: (0, _extends2.default)({}, _common.default),
        mode,
        primary: augmentColor({
          color: primary,
          name: "primary"
        }),
        secondary: augmentColor({
          color: secondary,
          name: "secondary",
          mainShade: "A400",
          lightShade: "A200",
          darkShade: "A700"
        }),
        error: augmentColor({
          color: error,
          name: "error"
        }),
        warning: augmentColor({
          color: warning,
          name: "warning"
        }),
        info: augmentColor({
          color: info,
          name: "info"
        }),
        success: augmentColor({
          color: success,
          name: "success"
        }),
        grey: _grey.default,
        contrastThreshold,
        getContrastText,
        augmentColor,
        tonalOffset
      }, modes[mode]), other);
      return paletteOutput;
    }
  }
});

// node_modules/@mui/material/styles/createTypography.js
var require_createTypography = __commonJS({
  "node_modules/@mui/material/styles/createTypography.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = createTypography;
    var _extends2 = _interopRequireDefault(require_extends());
    var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require_objectWithoutPropertiesLoose());
    var _utils = (init_esm(), __toCommonJS(esm_exports));
    var _excluded = ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"];
    function round(value) {
      return Math.round(value * 1e5) / 1e5;
    }
    var caseAllCaps = {
      textTransform: "uppercase"
    };
    var defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
    function createTypography(palette, typography) {
      const _ref = typeof typography === "function" ? typography(palette) : typography, {
        fontFamily = defaultFontFamily,
        fontSize = 14,
        fontWeightLight = 300,
        fontWeightRegular = 400,
        fontWeightMedium = 500,
        fontWeightBold = 700,
        htmlFontSize = 16,
        allVariants,
        pxToRem: pxToRem2
      } = _ref, other = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);
      if (true) {
        if (typeof fontSize !== "number") {
          console.error("MUI: `fontSize` is required to be a number.");
        }
        if (typeof htmlFontSize !== "number") {
          console.error("MUI: `htmlFontSize` is required to be a number.");
        }
      }
      const coef = fontSize / 14;
      const pxToRem = pxToRem2 || ((size) => `${size / htmlFontSize * coef}rem`);
      const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => (0, _extends2.default)({
        fontFamily,
        fontWeight,
        fontSize: pxToRem(size),
        lineHeight
      }, fontFamily === defaultFontFamily ? {
        letterSpacing: `${round(letterSpacing / size)}em`
      } : {}, casing, allVariants);
      const variants = {
        h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),
        h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),
        h3: buildVariant(fontWeightRegular, 48, 1.167, 0),
        h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),
        h5: buildVariant(fontWeightRegular, 24, 1.334, 0),
        h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),
        subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),
        subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),
        body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),
        body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),
        button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),
        caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),
        overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)
      };
      return (0, _utils.deepmerge)((0, _extends2.default)({
        htmlFontSize,
        pxToRem,
        fontFamily,
        fontSize,
        fontWeightLight,
        fontWeightRegular,
        fontWeightMedium,
        fontWeightBold
      }, variants), other, {
        clone: false
      });
    }
  }
});

// node_modules/@mui/material/styles/shadows.js
var require_shadows = __commonJS({
  "node_modules/@mui/material/styles/shadows.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var shadowKeyUmbraOpacity = 0.2;
    var shadowKeyPenumbraOpacity = 0.14;
    var shadowAmbientShadowOpacity = 0.12;
    function createShadow(...px) {
      return [`${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(",");
    }
    var shadows = ["none", createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
    var _default = shadows;
    exports.default = _default;
  }
});

// node_modules/@mui/material/styles/createTransitions.js
var require_createTransitions = __commonJS({
  "node_modules/@mui/material/styles/createTransitions.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = createTransitions;
    exports.easing = exports.duration = void 0;
    var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require_objectWithoutPropertiesLoose());
    var _extends2 = _interopRequireDefault(require_extends());
    var _excluded = ["duration", "easing", "delay"];
    var easing = {
      easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
      easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
      easeIn: "cubic-bezier(0.4, 0, 1, 1)",
      sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
    };
    exports.easing = easing;
    var duration = {
      shortest: 150,
      shorter: 200,
      short: 250,
      standard: 300,
      complex: 375,
      enteringScreen: 225,
      leavingScreen: 195
    };
    exports.duration = duration;
    function formatMs(milliseconds) {
      return `${Math.round(milliseconds)}ms`;
    }
    function getAutoHeightDuration(height) {
      if (!height) {
        return 0;
      }
      const constant = height / 36;
      return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);
    }
    function createTransitions(inputTransitions) {
      const mergedEasing = (0, _extends2.default)({}, easing, inputTransitions.easing);
      const mergedDuration = (0, _extends2.default)({}, duration, inputTransitions.duration);
      const create = (props = ["all"], options = {}) => {
        const {
          duration: durationOption = mergedDuration.standard,
          easing: easingOption = mergedEasing.easeInOut,
          delay = 0
        } = options, other = (0, _objectWithoutPropertiesLoose2.default)(options, _excluded);
        if (true) {
          const isString = (value) => typeof value === "string";
          const isNumber = (value) => !isNaN(parseFloat(value));
          if (!isString(props) && !Array.isArray(props)) {
            console.error('MUI: Argument "props" must be a string or Array.');
          }
          if (!isNumber(durationOption) && !isString(durationOption)) {
            console.error(`MUI: Argument "duration" must be a number or a string but found ${durationOption}.`);
          }
          if (!isString(easingOption)) {
            console.error('MUI: Argument "easing" must be a string.');
          }
          if (!isNumber(delay) && !isString(delay)) {
            console.error('MUI: Argument "delay" must be a number or a string.');
          }
          if (Object.keys(other).length !== 0) {
            console.error(`MUI: Unrecognized argument(s) [${Object.keys(other).join(",")}].`);
          }
        }
        return (Array.isArray(props) ? props : [props]).map((animatedProp) => `${animatedProp} ${typeof durationOption === "string" ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === "string" ? delay : formatMs(delay)}`).join(",");
      };
      return (0, _extends2.default)({
        getAutoHeightDuration,
        create
      }, inputTransitions, {
        easing: mergedEasing,
        duration: mergedDuration
      });
    }
  }
});

// node_modules/@mui/material/styles/zIndex.js
var require_zIndex = __commonJS({
  "node_modules/@mui/material/styles/zIndex.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var zIndex = {
      mobileStepper: 1e3,
      fab: 1050,
      speedDial: 1050,
      appBar: 1100,
      drawer: 1200,
      modal: 1300,
      snackbar: 1400,
      tooltip: 1500
    };
    var _default = zIndex;
    exports.default = _default;
  }
});

// node_modules/@mui/material/styles/createTheme.js
var require_createTheme = __commonJS({
  "node_modules/@mui/material/styles/createTheme.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.createMuiTheme = createMuiTheme;
    exports.default = void 0;
    var _extends2 = _interopRequireDefault(require_extends());
    var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require_objectWithoutPropertiesLoose());
    var _utils = (init_esm(), __toCommonJS(esm_exports));
    var _base = (init_base(), __toCommonJS(base_exports));
    var _system = (init_esm2(), __toCommonJS(esm_exports2));
    var _createMixins = _interopRequireDefault(require_createMixins());
    var _createPalette = _interopRequireDefault(require_createPalette());
    var _createTypography = _interopRequireDefault(require_createTypography());
    var _shadows = _interopRequireDefault(require_shadows());
    var _createTransitions = _interopRequireDefault(require_createTransitions());
    var _zIndex = _interopRequireDefault(require_zIndex());
    var _excluded = ["breakpoints", "mixins", "spacing", "palette", "transitions", "typography", "shape"];
    function createTheme(options = {}, ...args) {
      const {
        mixins: mixinsInput = {},
        palette: paletteInput = {},
        transitions: transitionsInput = {},
        typography: typographyInput = {}
      } = options, other = (0, _objectWithoutPropertiesLoose2.default)(options, _excluded);
      if (options.vars) {
        throw new Error(true ? `MUI: \`vars\` is a private field used for CSS variables support.
Please use another name.` : (0, _utils.formatMuiErrorMessage)(18));
      }
      const palette = (0, _createPalette.default)(paletteInput);
      const systemTheme = (0, _system.createTheme)(options);
      let muiTheme = (0, _utils.deepmerge)(systemTheme, {
        mixins: (0, _createMixins.default)(systemTheme.breakpoints, mixinsInput),
        palette,
        shadows: _shadows.default.slice(),
        typography: (0, _createTypography.default)(palette, typographyInput),
        transitions: (0, _createTransitions.default)(transitionsInput),
        zIndex: (0, _extends2.default)({}, _zIndex.default)
      });
      muiTheme = (0, _utils.deepmerge)(muiTheme, other);
      muiTheme = args.reduce((acc, argument) => (0, _utils.deepmerge)(acc, argument), muiTheme);
      if (true) {
        const stateClasses = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"];
        const traverse = (node, component) => {
          let key;
          for (key in node) {
            const child = node[key];
            if (stateClasses.indexOf(key) !== -1 && Object.keys(child).length > 0) {
              if (true) {
                const stateClass = (0, _base.generateUtilityClass)("", key);
                console.error([`MUI: The \`${component}\` component increases the CSS specificity of the \`${key}\` internal state.`, "You can not override it like this: ", JSON.stringify(node, null, 2), "", `Instead, you need to use the '&.${stateClass}' syntax:`, JSON.stringify({
                  root: {
                    [`&.${stateClass}`]: child
                  }
                }, null, 2), "", "https://mui.com/r/state-classes-guide"].join("\n"));
              }
              node[key] = {};
            }
          }
        };
        Object.keys(muiTheme.components).forEach((component) => {
          const styleOverrides = muiTheme.components[component].styleOverrides;
          if (styleOverrides && component.indexOf("Mui") === 0) {
            traverse(styleOverrides, component);
          }
        });
      }
      return muiTheme;
    }
    var warnedOnce = false;
    function createMuiTheme(...args) {
      if (true) {
        if (!warnedOnce) {
          warnedOnce = true;
          console.error(["MUI: the createMuiTheme function was renamed to createTheme.", "", "You should use `import { createTheme } from '@mui/material/styles'`"].join("\n"));
        }
      }
      return createTheme(...args);
    }
    var _default = createTheme;
    exports.default = _default;
  }
});

// dep:@mui_material_styles_createTheme
var mui_material_styles_createTheme_default = require_createTheme();
export {
  mui_material_styles_createTheme_default as default
};
//# sourceMappingURL=@mui_material_styles_createTheme.js.map
